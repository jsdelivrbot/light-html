const UUID=()=>{let e=()=>(65536*(1+Math.random())|0).toString(16).substring(1);return"p"+(e()+e())+"-"+e()},eventsList=["onclick","ondblclick","onchange","onmousedown","onmouseenter","onmouseleave","onmousemove","onmouseover","onmouseout","onmouseup","oninput","oninvalid","onkeydown","onkeypress","onkeyup","onload"],checkIfContains=(e,t)=>{switch(e){case"eventListeners":return eventsList.find(e=>t.search(e)>0)}},addId=(e,t)=>`${e}" ${t} "`,addTemplate=(e,t)=>`${e} <template ${t}> </template>`,createTemplateString=(e,t)=>{let r=[];return{string:e.map((e,s)=>{const n=UUID(),o=t[s];let a=checkIfContains("eventListeners",e);return a?(e=addId(e,n),r.push({id:n,value:o,param:a,type:"eventListeners"}),e):"string"==typeof o||"number"==typeof o?e=`${e}${o}`:(o&&(e=addTemplate(e,n),r.push({id:n,value:o,type:typeof o})),e)}).reduce((e,t)=>e+t),valuesMap:r}},putValuesToCorrectPlaces=(e,t)=>{for(let r of t){let{type:t,value:s,id:n}=r,o=e.parentNode.querySelector(`*[${n}]`);switch(!0){case"eventListeners"==t:o[r.param]=s;break;case 1==s.nodeType:o.replaceWith(s);break;case Array.isArray(s):let e=document.createDocumentFragment();s.forEach(t=>{1==!t.nodeType&&(t=t.html()),e.appendChild(t)}),o.replaceWith(e)}}return e};String.prototype.html=function(){return(new DOMParser).parseFromString(this,"text/html").body.firstChild},String.prototype.svg=function(){return(new DOMParser).parseFromString(this,"image/svg+xml").documentElement};class Parser{constructor(e,t){this.template=createTemplateString(e,t)}getHTML(){return putValuesToCorrectPlaces(this.template.string.html(),this.template.valuesMap)}getSVG(){let e=putValuesToCorrectPlaces(this.template.string.html(),this.template.valuesMap);return e.setAttribute("xmlns","http://www.w3.org/2000/svg"),e.outerHTML.svg()}}class ELEMENT{constructor(e,t,r){return this.values=t,this.strings=e,this.type=r,this.dom=this.parseHTML(),this.dom}render(e){e.appendChild(this)}update(e){this.attachFunctionsToDom(e),this.dom.replaceWith(e),this.dom=e}remove(){this.dom.remove()}parseHTML(){let{values:e,strings:t,type:r}=this,s=new Parser(t,e),n="HTML"==r?s.getHTML():s.getSVG();return this.attachFunctionsToDom(n),n}attachFunctionsToDom(e){e.render=this.render,e.update=this.update.bind(this)}}const HTML=(e,...t)=>{let r=[...t];return new ELEMENT(e,r,"HTML")},SVG=(e,...t)=>{let r=[...t];return new ELEMENT(e,r,"SVG")};export{HTML,SVG};
